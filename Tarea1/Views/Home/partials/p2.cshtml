
@model Tarea1.Models.p2Request;
<h1>Ejercicio #2</h1>
<p>
    2- Realizar una aplicación web utilizando .net core mvc, que solicite a través de un formulario al usuario 
    los valores de una ecuación de segundo grado y que a través de la formula general determine las 
    soluciones de la misma.
</p>

@using(Html.BeginForm("p2","Home", FormMethod.Post,new{@onsubmit="SubmitForm(event, this)"})){
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(x=>Model.a,new{})
        @Html.TextBoxFor(x=>Model.a,new{@class="form-control", @type="number",@required=""})
        @Html.ValidationMessageFor(x => Model.a, "*", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x=>Model.b,new{})
        @Html.TextBoxFor(x=>Model.b,new{@class="form-control", @type="number",@required=""})
        @Html.ValidationMessageFor(x => Model.b, "*", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x=>Model.c,new{})
        @Html.TextBoxFor(x=>Model.c,new{@class="form-control", @type="number",@required=""})
        @Html.ValidationMessageFor(x => Model.c, "*", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @{
            var text = Model!=null?Model.resultado:string.Empty;
        }
        @Html.LabelFor(x=>Model.resultado,new{})
        <label class="form-control">@text</label>
    </div>
    <button class="btn btn-success">Calcular</button>
}
